Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
                              ./tp2/bcdClock.o (__udivmodqi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                              ./tp1/tp1.o (__divmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./tp2/bcdClock.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./tp2/bcdClock.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fixunssfsi.o)
                              ./tp1/tp1.o (__fixunssfsi)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mul_sf.o)
                              ./tp1/tp1.o (__mulsf3)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_gt_sf.o)
                              ./tp1/tp1.o (__gtsf2)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_lt_sf.o)
                              ./tp1/tp1.o (__ltsf2)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)

Allocating common symbols
Common symbol       size              file

hs                  0x1               ./tp2/bcdClock.o
current_state       0x1               ./tp2/bcdClock.o
tsec                0x1               ./tp2/bcdClock.o
min                 0x1               ./tp2/bcdClock.o
count               0x2               ./tp2/bcdClock.o
time_updated        0x1               ./tp2/bcdClock.o
sec                 0x1               ./tp2/bcdClock.o
ths                 0x1               ./tp2/bcdClock.o
tmin                0x1               ./tp2/bcdClock.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
LOAD ./tp2/bcdClock.o
LOAD ./tp1/tp1.o
LOAD ./includes/lib/leds.o
LOAD ./includes/lib/switches.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x21ca
 *(.vectors)
 .vectors       0x0000000000000000       0x22 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000022                . = ALIGN (0x2)
                0x0000000000000022                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000022        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000022                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000022                __ctors_start = .
 *(.ctors)
                0x0000000000000022                __ctors_end = .
                0x0000000000000022                __dtors_start = .
 *(.dtors)
                0x0000000000000022                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000022        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
                0x0000000000000022                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000022        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 .init4         0x0000000000000044       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
                0x0000000000000058                __vector_1
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_6
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_11
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_7
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
 .text          0x000000000000005a      0x35a ./tp2/bcdClock.o
                0x000000000000005a                change_leds
                0x0000000000000074                led_on
                0x000000000000009a                led_off
                0x00000000000000bc                leds_on
                0x00000000000000ce                leds_off
                0x00000000000000e0                init
                0x0000000000000184                main
                0x0000000000000192                __vector_4
                0x00000000000001fc                update_time
                0x0000000000000270                plot
                0x00000000000002ec                up
                0x0000000000000358                down
 .text          0x00000000000003b4     0x128c ./tp1/tp1.o
                0x000000000000045c                ej1a
                0x000000000000046a                ej1b
                0x0000000000000674                ej1c
                0x0000000000000882                ej2a
                0x000000000000089e                ej2b
                0x000000000000090c                ej2c
                0x0000000000000b78                ej2d
                0x0000000000000cf6                ej3
 .text          0x0000000000001640       0x86 ./includes/lib/leds.o
 .text          0x00000000000016c6        0x0 ./includes/lib/switches.o
 .text          0x00000000000016c6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x00000000000016c6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .text          0x00000000000016c6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x00000000000016c6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x00000000000016c6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x00000000000016c6       0x50 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fixunssfsi.o)
                0x00000000000016c6                __fixunssfsi
 .text          0x0000000000001716      0x334 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o)
                0x00000000000019a6                __addsf3
                0x00000000000019f4                __subsf3
 .text          0x0000000000001a4a      0x1ea /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mul_sf.o)
                0x0000000000001a4a                __mulsf3
 .text          0x0000000000001c34       0x56 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_gt_sf.o)
                0x0000000000001c34                __gtsf2
 .text          0x0000000000001c8a       0x56 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_ge_sf.o)
                0x0000000000001c8a                __gesf2
 .text          0x0000000000001ce0       0x56 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_lt_sf.o)
                0x0000000000001ce0                __ltsf2
 .text          0x0000000000001d36       0x9e /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_sf_to_si.o)
                0x0000000000001d36                __fixsfsi
 .text          0x0000000000001dd4        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_thenan_sf.o)
 .text          0x0000000000001dd4        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000001dd4        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
 .text          0x0000000000001dd4        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
 .text          0x0000000000001dd4      0x19a /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_pack_sf.o)
                0x0000000000001dd4                __pack_f
 .text          0x0000000000001f6e       0xd2 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_unpack_sf.o)
                0x0000000000001f6e                __unpack_f
 .text          0x0000000000002040       0xb2 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fpcmp_parts_sf.o)
                0x0000000000002040                __fpcmp_parts_f
                0x00000000000020f2                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000020f2       0x18 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
                0x00000000000020f2                __udivmodqi4
 .text.libgcc   0x000000000000210a       0x26 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                0x000000000000210a                __divmodhi4
                0x000000000000210a                _div
 .text.libgcc   0x0000000000002130        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000002130        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000002130        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000002130       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000002130                __udivmodhi4
 .text.libgcc   0x0000000000002158       0x38 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
                0x0000000000002158                __prologue_saves__
 .text.libgcc   0x0000000000002190       0x36 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
                0x0000000000002190                __epilogue_restores__
                0x00000000000021c6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000021c6        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x00000000000021c6                exit
                0x00000000000021c6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000021c6        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000021ca                _etext = .

.data           0x0000000000800060       0x26 load address 0x00000000000021ca
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
 .data          0x0000000000800060        0xa ./tp2/bcdClock.o
                0x0000000000800060                leds
 .data          0x000000000080006a        0xa ./tp1/tp1.o
 .data          0x0000000000800074        0xa ./includes/lib/leds.o
 .data          0x000000000080007e        0x0 ./includes/lib/switches.o
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fixunssfsi.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mul_sf.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_gt_sf.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_ge_sf.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_lt_sf.o)
 .data          0x000000000080007e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_sf_to_si.o)
 .data          0x000000000080007e        0x8 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_thenan_sf.o)
                0x000000000080007e                __thenan_sf
 .data          0x0000000000800086        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800086        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
 .data          0x0000000000800086        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
 .data          0x0000000000800086        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_pack_sf.o)
 .data          0x0000000000800086        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_unpack_sf.o)
 .data          0x0000000000800086        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fpcmp_parts_sf.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800086                . = ALIGN (0x2)
                0x0000000000800086                _edata = .
                0x0000000000800086                PROVIDE (__data_end, .)

.bss            0x0000000000800086        0xc
                0x0000000000800086                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800086        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
 .bss           0x0000000000800086        0x1 ./tp2/bcdClock.o
                0x0000000000800086                led_status
 .bss           0x0000000000800087        0x0 ./tp1/tp1.o
 .bss           0x0000000000800087        0x1 ./includes/lib/leds.o
 .bss           0x0000000000800088        0x0 ./includes/lib/switches.o
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fixunssfsi.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_addsub_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mul_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_gt_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_ge_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_lt_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_sf_to_si.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_thenan_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_pack_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_unpack_sf.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_fpcmp_parts_sf.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800088        0xa ./tp2/bcdClock.o
                0x0000000000800088                hs
                0x0000000000800089                current_state
                0x000000000080008a                tsec
                0x000000000080008b                min
                0x000000000080008c                count
                0x000000000080008e                time_updated
                0x000000000080008f                sec
                0x0000000000800090                ths
                0x0000000000800091                tmin
                0x0000000000800092                PROVIDE (__bss_end, .)
                0x00000000000021ca                __data_load_start = LOADADDR (.data)
                0x00000000000021f0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800092        0x0
                0x0000000000800092                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800092                PROVIDE (__noinit_end, .)
                0x0000000000800092                _end = .
                0x0000000000800092                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x28bc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o
 .stab          0x00000000000006cc      0x7f8 ./tp2/bcdClock.o
                                        0x804 (size before relaxing)
 .stab          0x0000000000000ec4     0x1650 ./tp1/tp1.o
                                       0x1818 (size before relaxing)
 .stab          0x0000000000002514      0x270 ./includes/lib/leds.o
                                        0x438 (size before relaxing)
 .stab          0x0000000000002784      0x138 ./includes/lib/switches.o
                                        0x300 (size before relaxing)

.stabstr        0x0000000000000000      0xb03
 *(.stabstr)
 .stabstr       0x0000000000000000      0xb03 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8515.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Embebidos.elf elf32-avr)
LOAD linker stubs
